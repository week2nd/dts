<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="member">
 <resultMap type="member" id="memberResult">
 	<id 	property="uid" 		column="UID" />
 	<result property="upw" 		column="UPW" />
 	<result property="uname" 	column="UNAME" />
 	<result property="uaddress"	column="UADDRESS" />
 	<result property="uphone" 	column="UPHONE" />
 	<result property="umileage"	column="UMILEAGE" />
 	<result property="ugrant"	column="UGRANT" />
 	<result property="ubirth"	column="UDATE" />
 	<result property="udate"	column="UDATE" />
 	<result property="uwin"		column="UWIN" />
 	<result property="ulose"	column="ULOSE" />
 	
 </resultMap>
 <!-- 전체유저조회 -->
<select id="getMemberList" resultMap="memberResult">	

	SELECT	 	UID,
				UPW,
				UNAME,    
				UADDRESS, 
				UPHONE,          
				UMILEAGE,
				UGRANT,
				UBIRTH,
				UDATE,
				UWIN,
				ULOSE
	FROM 		MEMBER
	<!--  WHERE 1=1 -->
	<if test="searchKeyword != null and searchKeyword != ''">
		WHERE ${searchCondition} like '%' || #{searchKeyword} || '%'
	</if> 
<!-- <where>	
	<choose>
		<when test="searchCondition != null and searchCondition == 'title'">
			and title like '%' || #{searchKeyword} || '%'
		</when>
		<when test="searchCondition != null and searchCondition == 'content'">
			and content like '%' || #{searchKeyword} || '%'
		</when>
	</choose>
	
	</where>
	--> 
	<choose>
		<when test="sortCol != null and sortCol != ''">
			ORDER BY ${sortCol}	
		</when>
		<otherwise>
			ORDER BY UID DESC
		</otherwise>
	</choose>

</select>

<!-- 단일유저조회 -->
<select id="getMember" parameterType="member" resultType="member">
	SELECT 	UID,
			UPW,
			UNAME,    
			UADDRESS, 
			UPHONE,          
			UMILEAGE,
			UGRANT,
			UBIRTH,
			UDATE,
			UWIN,
			ULOSE
	FROM	MEMBER
	WHERE 	UID = #{uid}
	ORDER BY UID
</select>


<!-- <insert id ="insertMember" parameterType="member">
	<selectKey keyProperty="seq" resultType="integer" order="BEFORE">
		SELECT nvl(MAX(UID),0)+1 FROM MEMBER 
	</selectKey>
	INSERT INTO MEMBER (	UID,
						UPW,
						UADDRESS,    
						UPHONE, 
						UMILEAGE,          
						UGRANT,
						UBIRTH,
						UDATE,
						UWIN,
						ULOSE
						
						)
				VALUES(
					#{uid},
					#{upw},
					#{uname},
					#{uaddress},
					#{uphone},
					0,
					null,
					#{ubirth},
					sysdate,
					0,
					0
				)
</insert>

<update id ="updateMember" parameterType="member">
	UPDATE MEMBER SET 
					UPW=#{upw},
					UNAME=#{uname},    
					UADDRESS=#{uaddress}					
					UADDRESS=#{uphone}
					WHERE UID=#{uid}
</update>

<delete id ="deleteMember" parameterType="int">
	DELETE FROM MEMBER WHERE UID = #{value}
					
</delete>
<delete id ="deleteMemberList" parameterType="member">
	DELETE FROM MEMBER 
	<if test="uidList != null and uidList.length>0">
	WHERE UID in
	<foreach collection="uidList" item="item" open="("  close=")" separator=",">
		#{item}
	</foreach>
	</if>
	<if test="uidList == null or not uidList.length>0">
	WHERE UID = -1
	</if>
</delete>
 -->

</mapper> 