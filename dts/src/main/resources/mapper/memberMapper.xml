<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="member">
 
 
  <!-- 페이지 전체 건수 조회 -->
 <select id="getCount" resultType="int">
 	SELECT COUNT(*)
 		FROM MEMBER
	<if test="searchKeyword != null and searchKeyword != ''">
		WHERE ${searchCondition} like '%' || #{searchKeyword} || '%'
	</if> 
	<choose>
		<when test="sortCol != null and sortCol != ''">
			ORDER BY ${sortCol}	
		</when>
		<otherwise>
			ORDER BY U_ID DESC
		</otherwise>
	</choose>
 </select>

 <!-- 전체유저조회 주소에 '^'제거 후 목록보여주기 -->
<select id="getMemberList" resultType="member">	
select b.* from(select a.*, rownum rn from(
	SELECT  U_ID, U_PW, U_NAME, REPLACE(U_ADDRESS, '^', '') U_ADDRESS, U_PHONE,		
        	U_MILEAGE, U_GRANT, U_BIRTH, U_DATE, U_WIN, U_LOSE, U_EMAIL
	FROM MEMBER 
	<where>
	<!--  WHERE 1=1 -->
	<if test="searchKeyword != null and searchKeyword != ''">
		${searchCondition} like '%' || #{searchKeyword} || '%'
	</if> 
</where>
	
	<choose>
		<when test="sortCol != null and sortCol != ''">
			ORDER BY ${sortCol}	
		</when>
		<otherwise>
			ORDER BY U_ID DESC
		</otherwise>
	</choose>
  )a ) b where rn between #{first} and #{last}
</select>

<!-- 단일유저조회 -->
<select id="getMember" parameterType="member" resultType="member">
	SELECT	*
	FROM	MEMBER
	WHERE U_ID = #{uId}
</select>



<insert id ="insertMember" parameterType="member">
	<!--  <selectKey keyProperty="uId" resultType="string" order="BEFORE">
		SELECT nvl(MAX(U_ID),0)+1 FROM MEMBER 
	</selectKey>  --> 
	INSERT INTO MEMBER (U_ID, U_PW, U_NAME, U_ADDRESS, U_PHONE, U_BIRTH, U_DATE, U_EMAIL)
				VALUES(
						#{uId},
						#{uPw},
						#{uName},
						#{uAddress},
						#{uPhone},
						#{uBirth},
						TO_CHAR(SYSDATE, 'YYYY-MM-DD'),
						#{uEmail}
				)
</insert>

<update id ="updateMember" parameterType="member">
	UPDATE MEMBER SET 
					U_PW=#{uPw},
					U_ADDRESS=#{uAddress},    
					U_PHONE=#{uPhone},
					U_EMAIL=#{uEmail}					
					WHERE U_ID=#{uId}
</update> 

<delete id ="deleteMember" parameterType="member">
	DELETE FROM MEMBER WHERE U_ID=#{uId}
					
</delete>
<delete id ="deleteMemberList" parameterType="member">
	DELETE FROM MEMBER 
	<if test="uidList != null and uidList.length>0">
	WHERE U_ID in
	<foreach collection="uidList" item="item" open="("  close=")" separator=",">
		#{item}
	</foreach>
	</if>
	<if test="uidList == null or not uidList.length>0">
	WHERE U_ID = -1
	</if>
</delete>



</mapper> 